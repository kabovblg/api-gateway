server:
  port: 9090

spring:
  redis:
    host: redis
    port: 6379
  application:
    name: API-GATEWAY
  config:
    import: configserver:${CONFIG_SERVER_URL:http://localhost:9296}
#    import:
#      configserver: ${CONFIG_SERVER_URL:http://127.0.0.1:9296}
  cloud:
    gateway:
      routes:
        - id : ORDER-SERVICE
          uri: http://order-service-svc
          predicates:
            - Path=/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: ORDER-SERVICE
                fallbackuri: forward:/orderServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: PAYMENT-SERVICE
          uri: http://payment-service-svc
          predicates:
            - Path=/payment/**
          filters:
            - name: CircuitBreaker
              args:
                name: PAYMENT-SERVICE
                fallbackuri: forward:/paymentServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: PRODUCT-SERVICE
          uri: http://product-service-svc
          predicates:
            - Path=/product/**
          filters:
            - name: CircuitBreaker
              args:
                name: PRODUCT-SERVICE
                fallbackuri: forward:/productServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1

#okta:
#  oauth2:
#    issuer: https://trial-1925880.okta.com/oauth2/default
#    audience: api://default
#    client-id: 0oalno49iv44y8B0F697
#    client-secret: wxGl0W2bDAwtC7Q8o6uciEtkdANqVUgrn4RwkwIIenz9MqHezGw5vv-KSA2DmE4Z
#    scopes: openid, email, profile, offline_access